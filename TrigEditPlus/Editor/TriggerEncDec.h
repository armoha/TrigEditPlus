/*
 * Copyright (c) 2014 trgk(phu54321@naver.com)
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#pragma once

enum {
	NOCONDITION,
	COUNTDOWNTIMER,
	COMMAND,
	BRING,
	ACCUMULATE,
	KILL,
	COMMADNTHEMOST,
	COMMANDSTHEMOSTAT,
	MOSTKILLS,
	HIGHESTSCORE,
	MOSTRESOURCES,
	SWITCH,
	ELAPSEDTIME,
	NACD,
	OPPONENTS,
	DEATHS,
	COMMANDTHELEAST,
	COMMANDTHELEASTAT,
	LEASTKILLS,
	LOWESTSCORE,
	LEASTRESOURCES,
	SCORE,
	ALWAYS,
	NEVER
};

enum {
	NOACTION,
	VICTORY,
	DEFEAT,
	PRESERVETRIGGER,
	WAIT,
	PAUSEGAME,
	UNPAUSEGAME,
	TRANSMISSION,
	PLAYWAV,
	DISPLAYTEXTMESSAGE,
	CENTERVIEW,
	CREATEUNITWITHPROPERTIES,
	SETMISSIONOBJECTIVES,
	SETSWITCH,
	SETCOUNTDOWNTIMER,
	RUNAISCRIPT,
	RUNAISCRIPTATLOCATION,
	LEADERBOARDCONTROL,
	LEADERBOARDCONTROLATLOCATION,
	LEADERBOARDRECOURCES,
	LEADERBOARDKILLS,
	LEADERBOARDPOINTS,
	KILLUNIT,
	KILLUNITATLOCATION,
	REMOVEUNIT,
	REMOVEUNITATLOCATION,
	SETRESOURCES,
	SETSCORE,
	MINIMAPPING,
	TALKINGPORTRAIT,
	MUTEUNITSPEECH,
	UNMUTEUNITSPEECH,
	LEADERBOARDCOMPUTERPLAYERS,
	LEADERBOARDGOALCONTROL,
	LEADERBOARDGOALCONTROLATLOCATION,
	LEADERBOARDGOALRESOURCES,
	LEADERBOARDGOALKILLS,
	LEADERBOARDGOALPOINTS,
	MOVELOCATION,
	MOVEUNIT,
	LEADERBOARDGREED,
	SETNEXTSCENARIO,
	SETDOODADSTATE,
	SETINVINCIBILLITY,
	CREATEUNIT,
	SETDEATHS,
	ORDER,
	COMMENT,
	GIVEUNITSTOPLAYER,
	MODIFYUNITHITPOINTS,
	MODIFYUNITENERGY,
	MODIFYUNITSHIELDPOINTS,
	MODIFYUNITRESOURCEAMOUNT,
	MODIFYUNITHANGERCOUNT,
	PAUSETIMER,
	UNPAUSETIMER,
	DRAW,
	SETALLIANCESTATUS
};

enum FieldType {
	FIELDTYPE_NONE,
	FIELDTYPE_NUMBER,
	FIELDTYPE_ALLYSTATUS,
	FIELDTYPE_COMPARISON,
	FIELDTYPE_MODIFIER,
	FIELDTYPE_ORDER,
	FIELDTYPE_PLAYER,
	FIELDTYPE_PROPSTATE,
	FIELDTYPE_RESOURCE,
	FIELDTYPE_SCORE,
	FIELDTYPE_SWITCHACTION,
	FIELDTYPE_SWITCHSTATE,
	FIELDTYPE_AISCRIPT,
	FIELDTYPE_COUNT,
	FIELDTYPE_UNIT,
	FIELDTYPE_LOCATION,
	FIELDTYPE_STRING,
	FIELDTYPE_SWITCHNAME,
	FIELDTYPE_UNITPROPERTY
};

enum TrigField {
	CONDFIELD_NONE = 0,
	
	// Condition fields
	CONDFIELD_LOCID,
	CONDFIELD_PLAYER,
	CONDFIELD_RES,
	CONDFIELD_UID,
	CONDFIELD_SETTING,
	CONDFIELD_CONDTYPE,
	CONDFIELD_RES_SETTING,
	CONDFIELD_PROP,
	CONDFIELD_MASKFLAG,

	ACTFIELD_NONE = 0,
	
	// Action fields
	ACTFIELD_LOCID,
	ACTFIELD_STRID,
	ACTFIELD_WAVID,
	ACTFIELD_TIME,
	ACTFIELD_PLAYER,
	ACTFIELD_TARGET,
	ACTFIELD_SETTING,
	ACTFIELD_ACTTYPE,
	ACTFIELD_NUM,
	ACTFIELD_PROP,
	ACTFIELD_MASKFLAG
};

#define MAX_FIELD_NUM 50

struct FieldTypePair {
	int Field;
	FieldType Type;
};


struct TriggerStatementDecl {
	int stmt_type;
	const char* stmt_name;
	FieldTypePair fields[MAX_FIELD_NUM];
};

extern TriggerStatementDecl ConditionFields[23];
extern TriggerStatementDecl ActionFields[57];